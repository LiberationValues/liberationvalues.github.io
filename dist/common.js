export function currentTheme(){const t=document.documentElement.getAttribute("theme-override");if(t)return t;return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}function t(){const t="dark"===currentTheme()?"light":"dark";document.documentElement.setAttribute("theme-override",t),localStorage.setItem("theme-override",t)}export function themeChange(e,s=null){const i=localStorage.getItem("theme-override");i&&document.documentElement.setAttribute("theme-override",i);const r=window.matchMedia("(prefers-color-scheme: dark)"),n=r.matches?"dark":"light",c=i??n,o=document.getElementById(e);o&&(o.checked="dark"===c,o.addEventListener("change",t),r.addEventListener("change",(()=>{const t=currentTheme();o.checked="dark"===t})),s&&o.addEventListener("change",s)),s&&r.addEventListener("change",s)}export class Canvas{ctx;params;constructor(t,e){t.width=800,t.height=1e3,this.ctx=t.getContext("2d"),this.params=e,this.ctx.fillStyle=this.params.bg,this.ctx.fillRect(0,0,800,1e3)}static loadImage(t){const e=new Image;return e.src="./assets/values/"+t,new Promise(((t,s)=>{e.addEventListener("load",(()=>t(e))),e.addEventListener("error",s)}))}drawHeader(t,e=null){this.ctx.fillStyle=this.params.fg,this.ctx.font="700 60px Montserrat, sans-serif",this.ctx.textAlign="left",this.ctx.fillText("LiberationValues",20,90),this.ctx.font="50px Montserrat, sans-serif",this.ctx.fillText(t,20,140),this.ctx.textAlign="right",this.ctx.font="300 25px Montserrat, sans-serif",this.ctx.fillText("liberationvalues.github.io",780,40),this.ctx.fillText(this.params.version,780,70),e&&this.ctx.fillText(e,780,100)}async drawAxis(t,e,s,i,r=!0){const n=184+120*s;if(r){const[e,s]=await Promise.all(t.icons.map(Canvas.loadImage));this.ctx.drawImage(e,20,n-14,100,100),this.ctx.drawImage(s,680,n-14,100,100)}this.ctx.fillStyle="#222",this.ctx.fillRect(120,n-4,560,80),this.ctx.fillStyle=t.colors[0],this.ctx.fillRect(120,n,5.6*e-2,72),this.ctx.fillStyle=t.colors[1];const c=100-e;this.ctx.fillRect(682-5.6*c,n,5.6*c-2,72),this.ctx.fillStyle="#222",this.ctx.font="50px Montserrat, sans-serif";const o=n+53.5;e>30&&(this.ctx.textAlign="left",this.ctx.fillText(e.toFixed(1)+"%",130,o)),c>30&&(this.ctx.textAlign="right",this.ctx.fillText(c.toFixed(1)+"%",670,o));const a=`${t.name} Axis: ${i}`;this.ctx.fillStyle=this.params.fg,this.ctx.textAlign="center",this.ctx.font="300 25px Montserrat, Roboto, sans-serif",this.ctx.fillText(a,400,n-9)}static downloadCanvas(t){const e=new Date,s=[e.getHours(),e.getMinutes(),e.getDate(),e.getMonth()+1,e.getFullYear()].map((t=>t.toFixed())).join("-"),i=document.createElement("a");i.href=t.toDataURL("image/png"),i.download=`LiberationValues-${s}.png`,i.click()}}export function orderScores(t,e){for(const s of e){let e=0;for(const[i,r]of t)e+=Math.abs(r-s.stats[i]);s.score=e/t.size}return e.sort(((t,e)=>t.score-e.score))}export function findTier(t,e){const s=[90,75,60,40,25,10,0];for(const[i,r]of s.entries())if(t>=r&&t<(s[i-1]??100.1))return e[i];return""}
